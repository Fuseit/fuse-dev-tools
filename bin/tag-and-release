#!/usr/bin/env bash
set -e

usage() { echo "Usage: $0 [-a <application>] [-v <version>]" 1>&2; exit 1; }

tag_and_release() {
    tempfile1=$(mktemp)
    tempfile2=$(mktemp)

    echo "Generating changelog..."
    RUBYOPT="-W0" ./bin/fuse-dev-tools changelog_generator preview --repo $application > $tempfile1
    sed "1s/.*/$version/" $tempfile1 > $tempfile2

    echo "Moving to ${application} folder"
    cd "../$application" || exit

    echo "Updating the ${application} repository"
    git checkout master
    git pull -r

    echo "Creating and pushing 'release-${version:1}' branch"
    git checkout -b release-${version:1}
    git push origin release-${version:1}

    echo "Tagging ${application} ${version}"
    git tag -a $version -m $version || exit

    echo "Releasing ${application} ${version}"
    hub release create $version --file $tempfile2 || exit
}

cleanup() {
  echo "Removing temporary files"
  rm  -r $tempfile1 $tempfile2

  echo "Deleting local 'release-${version:1}' artifacts"
  git checkout master
  git branch -D release-${version:1}
  git tag -D $version
}

trap cleanup EXIT

while getopts "a:v:?h" o; do
    case "${o}" in
        a)
            application=${OPTARG}
            ;;
        v)
            version=${OPTARG}
            ;;
        h)
            usage
            ;;
    esac
done

shift $((OPTIND-1))

if [ -z "${application}" ] || [ -z "${version}" ]; then
    usage
fi

echo "The application is ${application} and the version is ${version}"

read -p "Continue (y/n)? " choice
case "$choice" in
    y|Y ) tag_and_release;;
    n|N ) exit 0;;
    * ) echo "invalid";;
esac
